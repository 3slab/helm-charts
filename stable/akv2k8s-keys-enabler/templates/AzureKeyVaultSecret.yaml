{{- range $targetSecrets := .Values.targetSecrets }}

{{/*
# =================== for mappedkeys 
*/}}

{{ if $targetSecrets.mappedKeys }}
{{- range $keyVaultKey, $secretKey := $targetSecrets.mappedKeys }}
---
apiVersion: {{ $.Values.apiVersion }}
kind: AzureKeyVaultSecret
metadata:
  name: {{ include "akv2k8s-keys-enabler.fullname" $ }}-{{ $targetSecrets.secretNameTarget}}-{{ $secretKey }}
spec:
  vault:
    name: {{ $targetSecrets.keyVaultSource}} {{/* # name of key vault */}}
    object:
      name: {{ $keyVaultKey }} {{/* # name of the akv object */}}
      type: secret {{/* # akv object type */}}
  output: 
    secret: 
      name: {{ $targetSecrets.secretNameTarget}} {{/*  # kubernetes secret name */}}
      dataKey: {{ $secretKey }} {{/*  # key to store object value in kubernetes secre */}}
{{- end }}
{{- end }}

{{/*
  # end of mappedkeys
  # =================== for multiKeyValue 
*/}}

{{ if $targetSecrets.multiKeyValue }}
---
apiVersion: {{ $.Values.apiVersion }}
kind: AzureKeyVaultSecret
metadata:
  name: {{ include "akv2k8s-keys-enabler.fullname" $ }}-{{ $targetSecrets.secretNameTarget}}-{{ $targetSecrets.multiKeyValue }}
spec:
  vault:
    name: {{ $targetSecrets.keyVaultSource}} {{/* # name of key vault */}}
    object:
      contentType: {{ $targetSecrets.contentType }} {{/* # make sure this matches the content of the secret, can be either 'application/x-json' or 'application/x-yaml' */}}
      name: {{ $targetSecrets.multiKeyValue }} {{/* # name of the akv object */}}
      type: multi-key-value-secret
  output: 
    secret: 
      name: {{ $targetSecrets.secretNameTarget}} {{/* # kubernetes secret name */}}
{{- end }}

{{/*
# end of multiKeyValue
*/}}

{{- end }}      