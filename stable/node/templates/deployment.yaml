apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "node.fullname" . }}
  labels:
    app: {{ template "node.name" . }}
    chart: {{ template "node.chart" . }}
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
   {{- if .Values.metadata.labels }}
{{ toYaml .Values.metadata.labels | indent 4 }}
   {{- end}}
spec:
  selector:
    matchLabels:
      app: {{ template "node.name" . }}
      release: "{{ .Release.Name }}"
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "node.name" . }}
        chart: {{ template "node.chart" . }}
        release: {{ .Release.Name | quote }}
        heritage: "{{ .Release.Service }}"          
      {{- if .Values.template.metadata.labels }}
{{ toYaml .Values.template.metadata.labels | indent 4 }}
      {{- end}}
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
      containers:
      - name: {{ template "node.fullname" . }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        {{- with .Values.command }}
        command:
{{ toYaml . | indent 8 }}
        {{- end }}
        {{- with .Values.args }}
        args:
{{ toYaml . | indent 8 }}
        {{- end }}
        env:
        - name: PUBLIC_PATH
          value: "/"
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 8 }}
{{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.applicationPort | default "80" }}
        {{- if .Values.healthChecks.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.healthChecks.httpPath }}
            port: http
          initialDelaySeconds: 60
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: {{ .Values.healthChecks.httpPath }}
            port: http
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 5
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: app
          mountPath: /app
        {{- if .Values.persistence.enabled }}
        - name: data
          mountPath: {{ .Values.persistence.path }}
        {{- end }}
{{- with .Values.volumeMounts }}
{{ toYaml . | indent 8 }}
{{- end }}
      volumes:
      - name: app
        emptyDir: {}
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- with .Values.volumes }}
{{ toYaml . | indent 6 }}
{{- end }}