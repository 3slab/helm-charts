{{- range $worker, $workerData := .Values.workers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mayan.fullname" $ }}-{{ $worker }}
  labels:
    {{- include "mayan.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ $worker }}
spec:
{{- if not $workerData.autoscaling.enabled }}
  replicas: {{ $workerData.replicaCount }}
{{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "mayan.selectorLabelsWithSuffix" (dict "root" $ "nameSuffix" $worker) | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
      labels:
        {{- include "mayan.selectorLabelsWithSuffix" (dict "root" $ "nameSuffix" $worker) | nindent 8 }}
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "mayan.fullname" $ }}-{{ $worker }}
          image: "{{ $.Values.global.image.repository }}:{{ $.Values.global.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.global.image.pullPolicy }}
          args:
            - run_worker
            - {{ $workerData.internalName }}
            {{- if $workerData.extraArguments }}{{- toYaml $workerData.extraArguments | nindent 12 }}{{- end }}
          envFrom:
            - secretRef:
                name: {{ include "mayan.secretsName" $ }}
            - configMapRef:
                name: {{ include "mayan.configMapName" $ }}
          resources:
            {{- toYaml $workerData.resources | nindent 12 }}
          securityContext:
            {{- toYaml $workerData.securityContext | nindent 12 }}
          volumeMounts:
            - name: mayan-media
              mountPath: /var/lib/mayan
            - name: mayan-tmp
              mountPath: /tmp
      volumes:
        - name: mayan-media
          persistentVolumeClaim:
            claimName: {{ include "mayan.persistentVolumeClaimName" $ }}
        - name: mayan-tmp
          emptyDir: {}
---
{{- end }}

# Celery Beat deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mayan.fullname" . }}-beat
  labels:
    {{- include "mayan.labels" $ | nindent 4 }}
    app.kubernetes.io/component: celery-beat    
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "mayan.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "mayan.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          args:
            - run_celery
            - "beat -l INFO --pidfile=/tmp/celerybeat.pid"
          envFrom:
            - secretRef:
                name: {{ include "mayan.secretsName" . }}
            - configMapRef:
                name: {{ include "mayan.configMapName" . }}
          resources:
            {{- toYaml .Values.beat.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.beat.securityContext | nindent 12 }}
          volumeMounts:
            - name: mayan-media
              mountPath: /var/lib/mayan
            - name: mayan-tmp
              mountPath: /tmp
      volumes:
        - name: mayan-media
          persistentVolumeClaim:
            claimName: {{ include "mayan.persistentVolumeClaimName" . }}
        - name: mayan-tmp
          emptyDir: {}
