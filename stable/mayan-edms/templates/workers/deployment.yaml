{{- range $worker, $workerData := .Values.workers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mayan.fullname" $ }}-{{ $worker }}
  labels:
    {{- include "mayan.labels" $ | nindent 4 }}
    app.kubernetes.io/component: worker
spec:
{{- if not $workerData.autoscaling.enabled }}
  replicas: {{ $workerData.replicaCount }}
{{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "mayan.selectorLabelsWithSuffix" (dict "root" $ "nameSuffix" $worker) | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
      labels:
        {{- include "mayan.selectorLabelsWithSuffix" (dict "root" $ "nameSuffix" $worker) | nindent 8 }}
        app.kubernetes.io/component: worker
    spec:
      {{- include "deployments.workers.affinity" (dict "root" $ "local" $workerData) | indent 6 }}
      containers:
        - args:
            - run_worker
            - {{ $workerData.internalName }}
            {{- if $workerData.quotedArgument }}
            - {{ $workerData.quotedArgument | quote }}{{ else }}
            {{- if $workerData.extraArguments }}{{- toYaml $workerData.extraArguments | nindent 12 }}{{- end }}
            {{- end }}
          {{- include "containers.env" . | indent 10 }}
          envFrom:
            - secretRef:
                name: {{ include "mayan.secretsName" $ }}
            - configMapRef:
                name: {{ include "mayan.configMapName" $ }}
          {{- include "containers.image" $ | nindent 10 }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          name: {{ include "mayan.fullname" $ }}-{{ $worker }}
          resources:
            {{- toYaml $workerData.resources | nindent 12 }}
          securityContext:
            {{- toYaml $workerData.securityContext | nindent 12 }}
          volumeMounts:
            {{- if $.Values.persistence.core.enabled }}
            - name: mayan-media
              mountPath: /var/lib/mayan
            {{- end }}
            - name: mayan-tmp
              mountPath: /tmp
      {{- include "containers.imagePullSecrets" $ | indent 6 }}
      volumes:
        {{- if $.Values.persistence.core.enabled }}
        - name: mayan-media
          persistentVolumeClaim:
            claimName: {{ include "pvcs.persistentVolumeClaimName" $ }}
        {{- end }}
        - name: mayan-tmp
          emptyDir: {}
---
{{- end }}

# Celery Beat deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mayan.fullname" . }}-beat
  labels:
    {{- include "mayan.labels" $ | nindent 4 }}
    app.kubernetes.io/component: celery-beat
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "mayan.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "mayan.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: celery-beat
    spec:
      {{- include "deployments.affinity" (dict "root" $ "local" $.Values.beat) | indent 6 }}
      containers:
        - args:
            - run_celery
            - "beat -l INFO --pidfile=/tmp/celerybeat.pid"
          {{- include "containers.env" . | indent 10 }}
          envFrom:
            - secretRef:
                name: {{ include "mayan.secretsName" . }}
            - configMapRef:
                name: {{ include "mayan.configMapName" . }}
          {{- include "containers.image" . | nindent 10 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ .Chart.Name }}
          resources:
            {{- toYaml .Values.beat.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.beat.securityContext | nindent 12 }}
          volumeMounts:
            {{- if $.Values.persistence.core.enabled }}
            - name: mayan-media
              mountPath: /var/lib/mayan
            {{- end }}
            - name: mayan-tmp
              mountPath: /tmp
      {{- include "containers.imagePullSecrets" . | indent 6 }}
      volumes:
        {{- if $.Values.persistence.core.enabled }}
        - name: mayan-media
          persistentVolumeClaim:
            claimName: {{ include "pvcs.persistentVolumeClaimName" . }}
        {{- end }}
        - name: mayan-tmp
          emptyDir: {}
