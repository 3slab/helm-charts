# Defines the deployment for the alfresco share app
apiVersion: {{ template "deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "content-services.shortname" . }}-share
  labels:
    app: {{ template "content-services.shortname" . }}-share
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: share
spec:
  selector:
    matchLabels:
      app: {{ template "content-services.shortname" . }}-share
      release: {{ .Release.Name }}
      component: share
  replicas: {{ .Values.share.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "content-services.shortname" . }}-share
        release: {{ .Release.Name }}
        component: share
    spec:
      {{- if .Values.global.alfrescoRegistryPullSecrets }}
      # only set this secret if a private docker registry variable is defined
      imagePullSecrets:
        - name: {{ .Values.global.alfrescoRegistryPullSecrets }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.share.image.repository }}:{{ .Values.share.image.tag }}"
          imagePullPolicy: {{ .Values.share.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.share.image.internalPort }}
          resources:
{{ toYaml .Values.share.resources | indent 12 }}
          {{ if .Values.mellon.enabled }}
          volumeMounts:
          - mountPath: /opt/share-config-custom.xml
            name: share-custom
            subPath: share-config-custom.xml
          command:
            - /bin/bash
            - -c
            - 'cat /opt/share-config-custom.xml > /usr/local/tomcat/shared/classes/alfresco/web-extension/share-config-custom.xml && /usr/local/tomcat/shared/classes/alfresco/substituter.sh "catalina.sh run"'
          {{ end }}
          envFrom:
          - configMapRef:
              name: {{ template "content-services.shortname" . }}-share-configmap
          readinessProbe:
            httpGet:
              path: /share
              port: {{ .Values.share.image.internalPort }}
            initialDelaySeconds: {{ .Values.share.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.share.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.share.readinessProbe.timeoutSeconds }}
          livenessProbe:
            httpGet:
              path: /share
              port: {{ .Values.share.image.internalPort }}
            initialDelaySeconds: {{ .Values.share.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.share.livenessProbe.periodSeconds }}
            failureThreshold: 1
            timeoutSeconds: {{ .Values.share.livenessProbe.timeoutSeconds }}
      {{ if .Values.mellon.enabled }}
      volumes:
      - name: share-custom
        configMap:
          name: {{ template "content-services.shortname" . }}-share-config
      {{ end }}
